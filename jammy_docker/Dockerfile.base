FROM nvidia/cuda:11.8.0-base-ubuntu22.04

# Make all NVIDIA GPUS visible
ARG NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES all

# Setup NON INTERACTIVE ENVIRONMENT
ENV DEBIAN_FRONTEND=noninteractive

# Install locales to prevent errors
RUN apt-get clean && \
    apt-get update && \
    apt-get install --no-install-recommends -y locales && \
    rm -rf /var/lib/apt/lists/* && \
    locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
  
ENV ROS_DISTRO=humble
ENV AMENT_PREFIX_PATH=/opt/ros/${ROS_DISTRO}
ENV COLCON_PREFIX_PATH=/opt/ros/${ROS_DISTRO}
ENV LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/${ROS_DISTRO}/opt/rviz_ogre_vendor/lib:/opt/ros/${ROS_DISTRO}/lib/x86_64-linux-gnu:/opt/ros/${ROS_DISTRO}/lib:/usr/share/gazebo/../../lib/x86_64-linux-gnu/gazebo-11/plugins:
ENV PATH=/opt/ros/${ROS_DISTRO}/bin:$PATH
ENV PYTHONPATH=/opt/ros/${ROS_DISTRO}/lib/python3.10/site-packages
ENV ROS_PYTHON_VERSION=3
ENV ROS_VERSION=2

# Install common tools
RUN apt-get update && apt-get install -y \
  software-properties-common \
  bash-completion \    
  apt-utils \
  build-essential \
  git curl wget cmake \
  vim \
  gnupg \
  lsb-release \
  sudo \
  net-tools \
  && rm -rf /var/lib/apt/lists/* 
  
# Install ROS2 and ROS packages
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null \
  && apt-get update && apt-get install -y \
    ros-${ROS_DISTRO}-ros-base \
    ros-${ROS_DISTRO}-desktop \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-joint-state-publisher \
    python3-colcon-common-extensions \
    python3-pip python3-rosdep python3-vcstool \
    python3-argcomplete \
  && rosdep init \
  && rm -rf /var/lib/apt/lists/*

# Install RVIZ2
RUN apt-get update && apt-get install -y \
    ros-${ROS_DISTRO}-rviz2 \
  && rm -rf /var/lib/apt/lists/*

# Install Gazebo 11
RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null \
  && sudo rosdep fix-permissions \
  && rosdep update \
  && apt-get update && apt-get install -q -y \
    ros-${ROS_DISTRO}-gazebo* \
    ros-${ROS_DISTRO}-ros-gz* \
  && apt-get -y autoremove \
	&& apt-get clean autoclean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# websocket server dependency
RUN pip3 install websocket_server posix-ipc django djangorestframework==3.13.1 django-webpack-loader==1.5.0
RUN python3.10 -m pip install websockets asyncio

# pip install dependencies
RUN pip install pylint

# Install VNC
# Xorg segfault error mitigation
RUN apt-get update && apt-get install -y --no-install-recommends \
        dbus-x11 \
        libdbus-c++-1-0v5 && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
  xvfb xauth xfonts-base xkb-data x11-xkb-utils \
  && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get --no-install-recommends install -y \
		x11vnc \
		xterm \
		xserver-xorg-video-dummy \
		x11-apps \
	&& apt-get -y autoremove \
	&& apt-get clean autoclean \
	&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

RUN wget https://xpra.org/xorg.conf \
    && rm -rf /tmp/*


# Install noVNC
RUN git clone https://github.com/novnc/noVNC.git

# Source ros humble
RUN echo 'source /opt/ros/humble/setup.bash' >> ~/.bashrc